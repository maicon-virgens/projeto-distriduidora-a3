/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package View;

import Controller.UsuarioController;
import Model.Usuario;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Maicon Virgens
 */
public class TelaUsuario extends javax.swing.JInternalFrame {
     private UsuarioController usuarioController;

    /**
     * Creates new form TelaUsuario
     */
    public TelaUsuario() {
        initComponents();
        CarregarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtUserId = new javax.swing.JTextField();
        txtUserNome = new javax.swing.JTextField();
        txtUserEmail = new javax.swing.JTextField();
        btnUserCriar = new javax.swing.JButton();
        btnUserAtualizar = new javax.swing.JButton();
        btnUserDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        txtUserSenha = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Usu√°rios");
        setPreferredSize(new java.awt.Dimension(599, 455));

        jLabel2.setText("ID");

        jLabel3.setText("Nome");

        jLabel4.setText("Email");

        txtUserNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUserNomeActionPerformed(evt);
            }
        });

        btnUserCriar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/create (1).png"))); // NOI18N
        btnUserCriar.setToolTipText("Adicionar");
        btnUserCriar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnUserCriar.setPreferredSize(new java.awt.Dimension(80, 80));
        btnUserCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserCriarActionPerformed(evt);
            }
        });

        btnUserAtualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/update.png"))); // NOI18N
        btnUserAtualizar.setToolTipText("");
        btnUserAtualizar.setPreferredSize(new java.awt.Dimension(80, 80));
        btnUserAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserAtualizarActionPerformed(evt);
            }
        });

        btnUserDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/imagens/delete.png"))); // NOI18N
        btnUserDelete.setToolTipText("");
        btnUserDelete.setPreferredSize(new java.awt.Dimension(80, 80));
        btnUserDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserDeleteActionPerformed(evt);
            }
        });

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Nome", "Email", "Dat/Cadastro"
            }
        ));
        tbUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbUserMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbUser);

        jLabel1.setText("Senha");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(btnUserCriar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78)
                .addComponent(btnUserAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addComponent(btnUserDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(34, 34, 34)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtUserNome, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUserSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtUserId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtUserNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtUserSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnUserAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUserCriar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUserDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        setBounds(0, 0, 599, 455);
    }// </editor-fold>//GEN-END:initComponents

  
    private void CarregarTabela(){
              
        List<Usuario> usuarios = new ArrayList<>();
        
        usuarioController = new UsuarioController();
        
        DefaultTableModel model =(DefaultTableModel) tbUser.getModel();
        model.setNumRows(0);
        
         try {
            usuarios = usuarioController.listarUsuarios();
            
            usuarios.forEach(item -> {
                System.out.println(item.getNome());
                
                model.addRow(new Object[] 
                    { 
                       //retorna os dados da tabela do BD, cada campo e um coluna.
                        item.getId_usuario(),
                        item.getNome(),
                        item.getEmail(),
                        item.getData_cadastro(),
                    });  
            });
             
         } catch (SQLException ex) {
             Logger.getLogger(TelaUsuario.class.getName()).log(Level.SEVERE, null, ex);
         }
   
    }
    
    private void btnUserCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserCriarActionPerformed
        // TODO add your handling code here:
        int result = 0;
        
        usuarioController = new UsuarioController();
        
        if(txtUserNome.getText().isEmpty() || txtUserEmail.getText().isEmpty() || txtUserSenha.getText().isEmpty()){
             JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        }else{
            result = usuarioController.adicionarUsuario( txtUserNome.getText(),  txtUserEmail.getText(), txtUserSenha.getText());
        
            if(result > 0){
                JOptionPane.showMessageDialog(null, "Usu√°rio adicionado com sucesso");
                txtUserId.setText(null);
                txtUserNome.setText(null);
                txtUserEmail.setText(null);  
                txtUserSenha.setText(null);  
                CarregarTabela();
            }         
        }

    }//GEN-LAST:event_btnUserCriarActionPerformed

    private void btnUserAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserAtualizarActionPerformed

        if( txtUserId.getText().isEmpty() ||txtUserNome.getText().isEmpty() || txtUserEmail.getText().isEmpty()){
             JOptionPane.showMessageDialog(null, "Preencha todos os campos");
        }else{
          // usuarioController = new UsuarioController();
      
            usuarioController.alterarUsuario(txtUserId.getText(), txtUserNome.getText(),  txtUserEmail.getText());
                  
            txtUserId.setText(null);
            txtUserNome.setText(null);
            txtUserEmail.setText(null);  
            txtUserSenha.setText(null);  
            
            CarregarTabela();
            
        }       
    }//GEN-LAST:event_btnUserAtualizarActionPerformed

    
    private void tbUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbUserMouseClicked
       setarCamposUpdate();
        
    }//GEN-LAST:event_tbUserMouseClicked

    private void txtUserNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUserNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUserNomeActionPerformed

    private void btnUserDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserDeleteActionPerformed
     
        int linhaSelecionada = tbUser.getSelectedRow();

        if (linhaSelecionada != -1) {
       
            TableModel dadosTabela = tbUser.getModel();
            

            String id_usuario = dadosTabela.getValueAt(linhaSelecionada, 0).toString();
            
            usuarioController.deletarUsuario(id_usuario);
 
            txtUserId.setText(null);
            txtUserNome.setText(null);
            txtUserEmail.setText(null);  
            txtUserSenha.setText(null);  
            
            CarregarTabela();
            
            
        }  
    }//GEN-LAST:event_btnUserDeleteActionPerformed
     
    private void setarCamposUpdate(){
    
        // Obt√©m a linha selecionada
        int linhaSelecionada = tbUser.getSelectedRow();

        // Verifica se alguma linha est√° selecionada
        if (linhaSelecionada != -1) {
            // Obt√©m o modelo de dados da tabela
            TableModel dadosTabela = tbUser.getModel();

            // Obt√©m o n√∫mero de colunas na tabela
            int columnCount = dadosTabela.getColumnCount();

            // Cria um array para armazenar os valores da linha selecionada
            Object[] dadosLinha = new Object[columnCount];
            
         
            
            txtUserId.setText(dadosTabela.getValueAt(linhaSelecionada, 0).toString());
            txtUserNome.setText( dadosTabela.getValueAt(linhaSelecionada, 1).toString());
            txtUserEmail.setText( dadosTabela.getValueAt(linhaSelecionada, 2).toString()); 
            
            System.out.println("Aqui: ");
            
        }  
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUserAtualizar;
    private javax.swing.JButton btnUserCriar;
    private javax.swing.JButton btnUserDelete;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUser;
    private javax.swing.JTextField txtUserEmail;
    private javax.swing.JTextField txtUserId;
    private javax.swing.JTextField txtUserNome;
    private javax.swing.JTextField txtUserSenha;
    // End of variables declaration//GEN-END:variables

    private static class DefautTableModel {

        public DefautTableModel() {
            
        }
    }
}
